/* style/components/audio/harmonicsFilter.css */

/* ==========================================================================
   HARMONICS FILTER COMPONENT
   Combined styling for harmonic bins and filter controls that work together
   ========================================================================= */

/* --- Container Styles --- */
.harmonic-bins-container {
  flex-direction: column;
  justify-content: flex-start;
  flex-grow: 1; /* Reduced from 2 to 1 */
}

/* --- Filter Controls (Top Layer) --- */
.blend-slider-container {
    display: flex;
    align-items: center;
    width: 100%;
    margin-bottom: 0.2rem;
    flex-shrink: 0;
    padding-left: 1px; /* Match grid border */
    padding-right: calc(30px + var(--space-2)); 
}

#filter-enable-toggle {
    flex-shrink: 0;
    background-color: var(--c-gridline);
    color: var(--c-text-muted);
    border: 1px solid var(--c-border);
    display: none; /* Hidden by default */
}

#filter-enable-toggle .filter-icon { 
    width: 24px; 
    height: 24px; 
}

#filter-enable-toggle.active {
    background-color: var(--c-accent);
    color: var(--c-surface);
    border-color: var(--c-accent-hover);
}

.filter-main-panel {
    display: flex;
    flex-direction: row;
    width: 100%;
    flex-grow: 1;
    gap: 0rem;
    min-height: 0;
}

.filter-button-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding-inline: var(--space-1);
    width: 40px;
    transition: opacity 0.2s;
}

/* --- Horizontal Sliders --- */
#blend-slider-container,
#cutoff-slider-container {
    position: relative;
    height: 10px; /* Fixed 10px height for both sliders */
    border-radius: var(--border-radius-sm);
    flex-grow: 1; /* Restore flex-grow but constrain with container padding */

    background: linear-gradient(
      to right, 
      var(--c-accent) var(--progress, 0%), 
      var(--c-gridline) var(--progress, 0%)
    );
}

#cutoff-slider-container {
    width: calc(100% - 1px - 30px - var(--space-2)); /* Explicit width calculation */
    align-self: flex-start;
    transition: opacity 0.2s;
    flex-shrink: 0;
    max-height: 10px; /* Prevent container from expanding beyond blend slider height */
    /* Apply same alignment constraints as blend slider */
    margin-left: 1px; /* Match grid border */
    margin-right: calc(var(--space-2)); /* Account for vertical slider */
}

.filter-cutoff-thumb,
.filter-blend-thumb {
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    font-size: 12px;
    background-color: var(--c-accent);
    border-radius: 50%;
    border: 2px solid var(--c-surface);
    box-shadow: var(--box-shadow-sm);
    cursor: grab;
    color: var(--c-surface);
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    z-index: 5;
}

.filter-cutoff-thumb:active,
.filter-blend-thumb:active {
    cursor: grabbing;
    background-color: var(--c-accent-hover);
    transform: translate(-50%, -50%) scale(1.1);
}

/* --- Vertical Blend Control --- */
.vertical-blend-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 30px; 
}

#vertical-blend-track {
    position: relative;
    width: var(--space-2);
    height: 100%;
    min-height: 80px; 
    background: linear-gradient(
        to top,
        var(--c-accent) var(--blend-progress, 0%),
        var(--c-gridline) var(--blend-progress, 0%)
    );
    border-radius: var(--border-radius-sm);
    cursor: pointer;
}

#vertical-blend-thumb {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 50%);
    width: 20px;
    height: 20px;
    background-color: var(--c-accent);
    border-radius: 50%;
    border: 2px solid var(--c-surface);
    box-shadow: var(--box-shadow-sm);
    cursor: ns-resize; 
    color: var(--c-surface);
    font-size: 12px;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    z-index: 5;
}

#vertical-blend-thumb:active {
    cursor: ns-resize;
    background-color: var(--c-accent-hover);
    transform: translate(-50%, 50%) scale(1.1);
}

/* --- Harmonic Bins Grid (Base Layer) --- */
.harmonic-bins-grid {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  min-height: 100px; /* Reduced minimum height */
  position: relative;
  gap: 0;
  padding: 0;
  border: 1px solid var(--c-border);
  border-radius: 2px;
  overflow: hidden;
}

/* Individual slider columns */
.slider-column {
  display: flex;
  flex-direction: column;
  flex: 1;
  align-items: center;
  min-width: 0;
}

/* Harmonic labels (original - kept for backward compatibility) */
.harmonic-label {
  font-size: 0.7rem;
  color: var(--c-text-muted);
  text-align: center;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Internal harmonic labels (positioned inside bins at bottom) */
.harmonic-label-internal {
  position: absolute;
  bottom: 2px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.8rem;
  font-weight: 600;
  text-align: center;
  z-index: 3;
  pointer-events: none;
  transition: color 0.1s ease, text-shadow 0.1s ease;
  user-select: none;
}

/* Slider track container */
.slider-track {
  flex-grow: 1;
  width: 100%;
  background-color: #ffffff;
  border: none;
  border-radius: 0;
  position: relative;
  cursor: pointer;
  margin: 0;
  min-height: 60px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

/* Snap zone at bottom of slider */
.slider-snap-zone {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 10%;
  background-color: #f7f7f7;
  border-top: 1px solid var(--c-border);
}

/* Slider fill (the colored bar) */
.slider-fill {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: transparent;
  transition: height 0.1s ease;
  border-radius: 0 0 1px 1px;
}

/* Phase buttons */
.phase-button {
  background-color: var(--c-gridline);
  color: var(--c-text-muted);
  border: 1px solid var(--c-border);
  border-radius: 3px;
  margin-top: 0rem;
  padding: 0.01rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  flex-shrink: 0;
}

.phase-button:hover {
  background-color: var(--c-border);
  color: var(--c-text);
}

.phase-button svg {
  width: 100%;
  height: 100%;
}

/* --- Filter Overlay --- */
.filter-overlay-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: calc(100% - 28px); /* Exclude phase buttons (20px button + 4px margin + 4px padding) */
  pointer-events: none;
  z-index: 2;
}

/* --- Filter Disabled States --- */
.multislider-container.filter-disabled #blend-slider-container,
.multislider-container.filter-disabled #cutoff-slider-container {
    opacity: 0.5;
    pointer-events: none;
}

.multislider-container.filter-disabled .filter-overlay-canvas {
    display: none; 
}