/* style/components/_paint.css */

/* Pitch Paint Canvas - will hold the painted trail */
#pitch-paint-canvas {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 2; /* Between grid and playhead */
}

/* Main container for all paint controls */
#pitch-paint-container {
    display: flex;
    flex-direction: column;
    gap: 0rem;
    flex: 1; /* Expand to fill available height */
}

.paint-layout-grid {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 0rem;
    align-items: stretch;
    grid-template-areas: "buttons meter settings";
    height: 100%; /* Fill parent height */
}

.paint-main-controls {
    grid-area: buttons;
    display: flex;
    flex-direction: column;
    gap: 0rem;
}

.paint-buttons-row {
    display: flex;
    flex-direction: column;
    gap: 0.2rem
}

.paint-buttons-row > .toolkit-button {
    flex: 1;
}

.paint-controls-row {
    display: flex;
    gap: var(--space-3);
    justify-content: center;
    margin-top: var(--space-2);
}

.paint-control-group {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-1);
}

.paint-control-group label {
    font-size: 0.9em;
    color: var(--c-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 500;
}

#mic-paint-toggle {
    background-color: var(--c-surface);
    color: var(--c-text);
    border: 1px solid var(--c-border);
}

/* Active state for the main toggle button */
#mic-paint-toggle.active {
    background-color: var(--c-danger);
    color: var(--c-surface);
    border-color: var(--c-danger);
    font-weight: bold;
}

#paint-clear-btn:disabled {
    background-color: var(--c-border);
    opacity: 0.5;
    cursor: not-allowed;
}

.paint-settings {
    grid-area: settings;
    display: flex;
    flex-direction: column;
    gap: 0rem;
    margin-top: 0;
    padding-top: 0;
    border-top: none; 
}

.paint-setting-group {
    display: flex;
    flex-direction: column;
    gap: 0rem;
}

.paint-setting-group label {
    font-size: var(--font-size-sm);
    color: var(--c-text-muted);
    font-weight: 500;
}

.paint-setting-group .slider-wrapper {
    display: flex;
    align-items: center;
    gap: 0rem;
}

/* Generic slider style for our new controls */
.paint-slider {
    width: 100%;
    height: 6px;
    border-radius: var(--border-radius-sm);
    background: var(--c-gridline);
    outline: none;
    -webkit-appearance: none;
    appearance: none;
    flex-grow: 1;
}

.paint-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: var(--c-accent);
    border: 2px solid var(--c-surface);
    cursor: pointer;
    box-shadow: var(--box-shadow-sm);
}

.paint-slider::-moz-range-thumb {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: var(--c-accent);
    border: 2px solid var(--c-surface);
    cursor: pointer;
    box-shadow: var(--box-shadow-sm);
}

/* Value display next to the sliders */
.paint-setting-group .slider-wrapper span {
    font-size: var(--font-size-sm);
    color: var(--c-text);
    background-color: var(--c-gridline);
    padding: var(--space-1) var(--space-2);
    border-radius: var(--border-radius-sm);
    min-width: 3.8em;
    text-align: center;
}

/* ============================================
   MICROPHONE METER STYLES
   ============================================ */

/* Inline meter container (in main controls column) */
.mic-meter-container-inline {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
    margin-top: var(--space-2);
    padding: var(--space-2);
    background-color: var(--c-gridline);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--c-border);
}

.mic-meter-header-inline {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.meter-label {
    font-size: var(--font-size-sm);
    color: var(--c-text);
    font-weight: 600;
}

.meter-settings-btn-small {
    padding: var(--space-1);
    font-size: var(--font-size-xs);
    min-width: auto;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.mic-meter-wrapper-inline {
    position: relative;
    background-color: var(--c-surface);
    border: 1px solid var(--c-border);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    height: 36px; /* Compact height for inline display */
}

/* Legacy meter container (for settings panel) */
.mic-meter-container {
    margin-top: var(--space-4);
    border-top: 1px solid var(--c-border);
    padding-top: var(--space-3);
}

.mic-meter-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-2);
}

.mic-meter-header h5 {
    margin: 0;
    font-size: var(--font-size-sm);
    color: var(--c-text);
    font-weight: 600;
}

.meter-controls {
    display: flex;
    gap: var(--space-1);
}

.meter-settings-btn {
    padding: var(--space-1);
    font-size: var(--font-size-sm);
    min-width: auto;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.mic-meter-wrapper, .mic-meter-wrapper-inline {
    position: relative;
    background-color: var(--c-surface);
    border: 1px solid var(--c-border);
    border-radius: var(--border-radius-md);
    overflow: hidden;
}

/* Regular meter wrapper sizes */
.mic-meter-wrapper.compact {
    height: 48px;
}

.mic-meter-wrapper.wide {
    height: 72px;
}

/* Inline meter wrapper is always compact */
.mic-meter-wrapper-inline {
    height: 36px;
}

/* Vertical meter container - positioned between buttons and sliders */
.mic-meter-container-vertical {
    grid-area: meter;
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    padding: 0 var(--space-2);
    border-left: 1px solid var(--c-border-light);
    border-right: 1px solid var(--c-border-light);
    width: 3.5rem;
    height: 100%;
}

.mic-meter-header-vertical {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: var(--font-size-sm);
    color: var(--c-text);
    font-weight: 600;
}

.mic-meter-wrapper-vertical {
    flex: 1; /* Expand to fill remaining height */
    position: relative;
    background-color: var(--c-surface);
    border: 1px solid var(--c-border);
    border-radius: var(--border-radius-md);
    overflow: hidden;
    min-height: 100px; /* Ensure minimum height taller than width */
}

.meter-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    background-color: var(--c-gridline);
    opacity: 0.6;
}

.meter-placeholder.disabled {
    opacity: 0.4;
}

.meter-status-text {
    font-size: var(--font-size-xs);
    color: var(--c-text-muted);
    text-align: center;
    padding: var(--space-1);
}

/* Smaller text for inline meter */
.mic-meter-wrapper-inline .meter-status-text {
    font-size: 10px;
    padding: var(--space-1);
}

/* When meter is active, hide the placeholder */
.mic-meter-wrapper.active .meter-placeholder,
.mic-meter-wrapper-inline.active .meter-placeholder {
    display: none;
}

/* Meter canvas positioning */
.mic-meter-wrapper canvas,
.mic-meter-wrapper-inline canvas {
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--c-surface);
}

/* Settings panel */
.meter-settings-panel {
    margin-top: var(--space-2);
    padding: var(--space-3);
    background-color: var(--c-gridline);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--c-border);
}

.meter-settings-panel.hidden {
    display: none;
}

.meter-setting-group {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-2);
}

.meter-setting-group:last-child {
    margin-bottom: 0;
    gap: var(--space-2);
}

.meter-setting-group label {
    font-size: var(--font-size-sm);
    color: var(--c-text);
    font-weight: 500;
    min-width: 80px;
}

.meter-control {
    padding: var(--space-1) var(--space-2);
    border: 1px solid var(--c-border);
    border-radius: var(--border-radius-sm);
    background-color: var(--c-surface);
    color: var(--c-text);
    font-size: var(--font-size-sm);
}

.meter-control:focus {
    outline: 2px solid var(--c-warning);
    outline-offset: 2px;
}

/* Error states */
.meter-error {
    background-color: #f8d7da;
    border-color: var(--c-danger);
}

.meter-error .meter-status-text {
    color: var(--c-danger);
}

/* Permission prompt */
.meter-permission-prompt {
    padding: var(--space-3);
    text-align: center;
    background-color: #fff3cd;
    border: 1px solid var(--c-warning);
    border-radius: var(--border-radius-md);
    margin-top: var(--space-2);
}

.meter-permission-prompt p {
    margin: 0 0 var(--space-2) 0;
    font-size: var(--font-size-sm);
    color: var(--c-text);
}

.meter-permission-prompt button {
    background-color: var(--c-warning);
    color: var(--c-text);
    border: none;
    padding: var(--space-2) var(--space-3);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
    cursor: pointer;
}

.meter-permission-prompt button:hover {
    background-color: #e0a800;
}

/* Accessibility enhancements */
.mic-meter-wrapper[aria-label] {
    /* Screen reader support */
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .mic-meter-wrapper canvas {
        /* Disable animations for users who prefer reduced motion */
    }
}